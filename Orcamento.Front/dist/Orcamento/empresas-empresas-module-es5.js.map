{"version":3,"sources":["src/app/empresas/empresas-form/empresas-form.component.html","src/app/empresas/empresas-lista/empresas-lista.component.html","src/app/empresas/empresas-form/empresas-form.component.scss","src/app/empresas/empresas-form/empresas-form.component.ts","src/app/empresas/empresas-lista/empresas-lista.component.scss","src/app/empresas/empresas-lista/empresas-lista.component.ts","src/app/empresas/empresas-routing.module.ts","src/app/empresas/empresas.module.ts","src/app/empresas/empresas.service.ts","src/app/empresas/guards/empresa-resolver.guard.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"form\\\">\\n  <div class=\\\"card border-primary mb-3\\\">\\n    <div class=\\\"card-header\\\">\\n      <h4>Empresa: <small class=\\\"text-secondary\\\">{{ form.controls['nomeReal'].value }}</small></h4>\\n    </div>\\n    <div class=\\\"card-body text-primary\\\">\\n      <div class=\\\"form-row mb-3\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"codigo\\\">Código</label>\\n          <input [readonly]=\\\"edit\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"codigo\\\" placeholder=\\\"Código\\\" formControlName=\\\"codigo\\\"  [ngClass]=\\\"{'is-invalid': submitted && hasError('codigo')}\\\" />          \\n          <div class=\\\"valid-feedback\\\"></div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"hasError('codigo') && hasError('codigo')['required']\\\">\\n            Por favor informe um código para a empresa.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row mb-3\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"nomeReal\\\">Nome Real</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeReal\\\" placeholder=\\\"Nome Real\\\" formControlName=\\\"nomeReal\\\" [ngClass]=\\\"{ 'is-invalid': submitted && hasError('nomeReal')}\\\" />\\n          <div class=\\\"valid-feedback\\\"></div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"hasError('nomeReal') && hasError('nomeReal')['required']\\\">\\n            Por favor informe um nome real para a empresa.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row mb-3\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"nomeFantasia\\\">Nome Fantasia</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" placeholder=\\\"Nome Fantasia\\\" formControlName=\\\"nomeFantasia\\\" [ngClass]=\\\"{ 'is-invalid': submitted && hasError('nomeFantasia')}\\\"/>\\n          <div class=\\\"valid-feedback\\\"></div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"hasError('nomeFantasia') && hasError('nomeFantasia')['required']\\\">\\n            Por favor informe um nome fantasia para a empresa.\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-row btn-row form-row-btn\\\">\\n    <button class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onBack()\\\">Voltar</button>\\n    <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"onSubmit()\\\">Salvar</button>\\n  </div>\\n\\n</form>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <div class=\\\"float-left text-primary\\\">\\n      <span class=\\\"icon icon-office title\\\"></span>\\n      <h4 class=\\\"title\\\">Empresas</h4>\\n    </div>\\n    <div class=\\\"float-right\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" [routerLink]=\\\"['novo']\\\" tooltip=\\\"New record.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-plus \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onRefresh()\\\" tooltip=\\\"Refresh List.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-loop2 \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onConfigList()\\\" tooltip=\\\"Config List.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-cog \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onRefresh()\\\" tooltip=\\\"Carga.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-upload \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onRefresh()\\\" tooltip=\\\"Dowload file.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-download \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary \\\" [ngClass]=\\\"{'active': !isCollapsed}\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\n            [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseBasic\\\" tooltip=\\\"Filter.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-filter \\\"></span>\\n          </button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n    <div id=\\\"collapseBasic\\\" [collapse]=\\\"isCollapsed\\\" [isAnimated]=\\\"true\\\" class=\\\"bg-light mb-3 rounded shadow-sm\\\">\\n      <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row pr-3 pl-3\\\">\\n          <div class=\\\"col-sm-4 mb-3\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"codigo\\\">#</label>\\n            <input class=\\\"form-control\\\" id=\\\"codigo\\\" placeholder=\\\"Código\\\" formControlName=\\\"codigo\\\" />\\n          </div>\\n          <div class=\\\"col-sm-8 mb-3\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"nomeFantasia\\\">Empresa</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" placeholder=\\\"Empresa\\\" formControlName=\\\"nomeFantasia\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"form-row pr-3 pl-3\\\">\\n          <div class=\\\"col-sm-12 mb-3 text-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"onFilterConfirm()\\\">Aplicar Filtro</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <table class=\\\"table table-striped mobile-optimised\\\" *ngIf=\\\"list; else loading\\\">\\n      <thead>\\n        <tr>\\n          <th>#</th>\\n          <th>Empresa</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let fields of list.data\\\">\\n          <td data-th=\\\"#\\\">{{ fields.codigo }}</td>\\n          <td data-th=\\\"Empresa\\\">{{ fields.nomeFantasia }}</td>\\n          <td>\\n            <span class=\\\"float-right\\\">\\n              <button class=\\\"btn btn-outline-info mb-1 btn-sm mr-2\\\" (click)=\\\"onEdit(fields.codigo)\\\" tooltip=\\\"Edit.\\\" placement=\\\"top\\\">\\n                <span class=\\\"icon icon-pencil \\\"></span>\\n              </button>\\n              <button class=\\\"btn btn-outline-danger mb-1 btn-sm\\\" (click)=\\\"onDelete(fields.codigo)\\\" tooltip=\\\"Delete.\\\" placement=\\\"top\\\">\\n                <span class=\\\"icon icon-bin \\\"></span>\\n              </button>\\n            </span>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <ng-template #loading>\\n      <span>Carregando Empresas...</span>\\n    </ng-template>\\n  </div>\\n  <div class=\\\"card-footer text-muted\\\" *ngIf=\\\"list\\\">\\n    <div class=\\\"float-left\\\">\\n      <nav aria-label=\\\"Page navigation example\\\" *ngIf=\\\"list\\\">\\n        <ul class=\\\"pagination mb-0\\\">\\n          <li class=\\\"page-item\\\" *ngIf=\\\"list.pages.length >= 1\\\">\\n            <span class=\\\"page-link link-pointer\\\" (click)=\\\"onPagination(1)\\\">\\n              <<span class=\\\"sr-only\\\">(current)</span>\\n            </span>\\n          </li>\\n          <li class=\\\"page-item\\\" *ngFor=\\\"let page of list.pages\\\" [ngClass]=\\\"{'active': page == list.pageNow}\\\" aria-current=\\\"page\\\">\\n            <span class=\\\"page-link\\\" [ngClass]=\\\"{'link-pointer': page != list.pageNow}\\\" (click)=\\\"onPagination(page)\\\">\\n              {{ page }}\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </span>\\n          </li>\\n          <li class=\\\"page-item\\\"  *ngIf=\\\"list.pages.length >= 1\\\">\\n            <span class=\\\"page-link link-pointer\\\" (click)=\\\"onPagination(list.pageCount)\\\">\\n              ><span class=\\\"sr-only\\\">(current)</span>\\n            </span>\\n          </li>\\n        </ul>\\n      </nav>\\n    </div>\\n    <div class=\\\"float-right text-primary pagination-ds\\\">\\n      {{list.pageNow}} de {{list.pageCount}} paginas ( {{list.regCount}} itens )\\n    </div>\\n  </div>\\n</div>\\n\\n\"","export default \".btn-row {\\n  margin-top: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxhcmF1am9nb21lcy9Qcm9qZWN0cy9PcmNhbWVudG8uRnJvbnQvT3JjYW1lbnRvL3NyYy9hcHAvZW1wcmVzYXMvZW1wcmVzYXMtZm9ybS9lbXByZXNhcy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9lbXByZXNhcy9lbXByZXNhcy1mb3JtL2VtcHJlc2FzLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZW1wcmVzYXMvZW1wcmVzYXMtZm9ybS9lbXByZXNhcy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1yb3cge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuIiwiLmJ0bi1yb3cge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { EmpresasService } from '../empresas.service';\nimport { AlertModalService } from '../../shared/alert-modal.service';\nimport { ActivatedRoute } from '@angular/router';\n\nexport enum AlertEmpresa {\n  UPDATE_SUCCESS = 'Empresa atualizada com sucesso!',\n  UPDATE_ERROR = 'Erro ao atualizar empresa, tente novamente!',\n  CREATE_SUCCESS = 'Empresa criada com sucesso!',\n  CREATE_ERROR = 'Erro ao criar empresa, tente novamente!'\n}\n\n@Component({\n  selector: 'app-empresas-form',\n  templateUrl: './empresas-form.component.html',\n  styleUrls: ['./empresas-form.component.scss']\n})\nexport class EmpresasFormComponent implements OnInit {\n\n  form: FormGroup;\n  submitted: boolean;\n  edit: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: EmpresasService,\n    private modal: AlertModalService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n\n      const empresa = this.route.snapshot.data.empresa;\n\n      this.edit = (empresa.codigo == null) ? false : true;\n\n      this.form = this.fb.group({\n        codigo: [empresa.codigo, Validators.required],\n        nomeReal: [empresa.nomeReal, Validators.required],\n        nomeFantasia: [empresa.nomeFantasia, Validators.required],\n      });\n\n      this.submitted = false;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.valid) {\n      this.service.save(this.form.value , this.edit).subscribe(\n        success => { this.edit ? this.onUpdate() : this.onCreate(); },\n        error => this.modal.showAlertDanger( this.edit ? AlertEmpresa.UPDATE_ERROR : AlertEmpresa.CREATE_ERROR )\n      );\n    }\n  }\n\n  private onUpdate() {\n    this.modal.showAlertSuccess(AlertEmpresa.UPDATE_SUCCESS);\n    this.onBack();\n  }\n\n  private onCreate() {\n    this.modal.showAlertSuccess(AlertEmpresa.CREATE_SUCCESS);\n    this.submitted = false;\n    this.form.reset();\n  }\n\n  hasError(field: string) {\n    return this.form.get(field).errors;\n  }\n\n  onCancel() {\n    this.submitted = false;\n    this.form.reset();\n    console.log('onCancel');\n  }\n\n  onBack() {\n    this.location.back();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcHJlc2FzL2VtcHJlc2FzLWxpc3RhL2VtcHJlc2FzLWxpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError, take, switchMap } from 'rxjs/operators';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { Filter } from './../../shared/lista/filter';\nimport { EmpresasService } from '../empresas.service';\nimport { AlertModalService } from '../../shared/alert-modal.service';\nimport { Lista } from 'src/app/shared/lista/lista';\nimport { ConfigList } from '../../shared/config-list-modal/configList';\n\nexport enum Alert {\n  LISTA_ERROR = 'Erro ao carregar empresas. Tente novamente mais tarde.',\n  CONFIRMACAO_EXCLUSAO = 'Tem certeza que deseja remover essa empresa?',\n  DELETE_SUCCESS = 'Empresa removida com sucesso!',\n  DELETE_ERROR = 'Erro ao remover empresa. Tente novamente mais tarde!',\n  SESSION_STORAGE = 'empresaLista',\n  CONFIG_LIST_ERROR = 'Erro ao configurar a lista. Tente novamente mais tarde!',\n  CONFIG_LIST_SUCCESS = 'Configuração aplicada com sucesso.'\n}\n\n@Component({\n  selector: 'app-empresas-lista',\n  templateUrl: './empresas-lista.component.html',\n  styleUrls: ['./empresas-lista.component.scss']\n})\nexport class EmpresasListaComponent implements OnInit {\n\n  form: FormGroup;\n  error$ = new Subject<boolean>();\n  deleteModalRef: BsModalRef;\n  filterModalRef: BsModalRef;\n  list: Lista = {\n    pagination: true,\n    pagePrevious: 0,\n    pageNext: 0,\n    pageCount: 0,\n    pageNow: 0,\n    pageSize: 0,\n    regCount: 0,\n    pages: [],\n    select: [],\n    orderBy: [],\n    filters: [],\n    data: null\n  };\n  isCollapsed = true;\n\n  @ViewChild('deleteModal', {static : false}) deleteModal: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: EmpresasService,\n    private alertService: AlertModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit() {\n    const session = JSON.parse(sessionStorage.getItem(Alert.SESSION_STORAGE));\n    if (session != null) { this.list = session; }\n    this.setInputSearch(this.list.filters);\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  private setInputSearch(filter: Filter[]) {\n\n    let codigo: string = null;\n    let nomeFantasia: string = null;\n\n    filter.forEach(x => {\n      if (x.name == 'codigo') { codigo = x.value; }\n      if (x.name == 'nomeFantasia') { nomeFantasia = x.value; }\n    });\n\n    if (filter.length >= 1) { this.isCollapsed = false; }\n\n    this.form = this.fb.group({\n      codigo: [codigo],\n      nomeFantasia: [nomeFantasia]\n    });\n  }\n\n  onRefresh() {\n    this.list.filters = [];\n    this.list.pageNow = 1;\n    this.isCollapsed = true;\n    this.form.reset();\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  onFilter(template: TemplateRef<any>) {\n    this.filterModalRef = this.modalService.show(template);\n  }\n\n  onPagination(page: number) {\n    this.list.pageNow = page;\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  onFilterConfirm() {\n    const filters: Filter[] = [];\n    this.list.filters = [];\n    this.list.pageNow = 1;\n    Object.keys(this.form.controls).forEach(key => {\n      if (this.form.get(key).value != null && this.form.get(key).value != '') {\n        this.list.filters.push({\n          name: key,\n          value: this.form.get(key).value\n        });\n      }\n    });\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  handleError() {\n    this.alertService.showAlertDanger(Alert.LISTA_ERROR);\n  }\n\n  onEdit(codigo: string) {\n    this.router.navigate(['editar', codigo], {relativeTo: this.route});\n  }\n\n  onDelete(codigo: string) {\n    const result$ = this.alertService.showConfirm('Confirmação', Alert.CONFIRMACAO_EXCLUSAO);\n    result$.asObservable().pipe(\n      take(1),\n      switchMap(result => result ? this.service.remove(codigo) : EMPTY)\n    )\n    .subscribe(\n      success => this.onConfirmeDeleteSuccess(),\n      error => this.onConfirmeDeleteError()\n    );\n  }\n\n  onConfigList() {\n    const session = JSON.parse(sessionStorage.getItem(Alert.SESSION_STORAGE));\n    const list: Lista = session as Lista;\n    // this.list = session;\n\n    const configList: ConfigList = {\n      success: true,\n      pagination: list.pagination,\n      pageSize: list.pageSize\n    };\n\n    const result$ = this.alertService.showConfigList(configList);\n    result$.asObservable().pipe(take(1))\n    .subscribe(\n      success => this.onConfirmeConfigListSuccess(success),\n      error => this.onConfirmeConfigListError()\n    );\n  }\n\n  private onConfirmeConfigListSuccess(configList: ConfigList) {\n    if (!configList.success) { return; }\n    console.log(configList);\n\n    this.list.pageSize = configList.pageSize != null ? configList.pageSize : 0;\n    this.list.pagination = configList.pagination != null ? configList.pagination : true;\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n    this.lista();\n    this.alertService.showAlertSuccess(Alert.CONFIG_LIST_SUCCESS);\n  }\n\n  private onConfirmeConfigListError() {\n    this.alertService.showAlertDanger(Alert.CONFIG_LIST_ERROR);\n  }\n\n  private lista() {\n    this.service.listFilter(this.list).pipe(\n      take(1),\n      catchError(error => {\n        this.handleError();\n        return EMPTY;\n      })\n    ).subscribe(dados => this.list = dados);\n  }\n\n  private onConfirmeDeleteSuccess() {\n    this.onRefresh();\n    this.alertService.showAlertSuccess(Alert.DELETE_SUCCESS);\n  }\n\n  private onConfirmeDeleteError() {\n    this.alertService.showAlertDanger(Alert.DELETE_ERROR);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpresasListaComponent } from './empresas-lista/empresas-lista.component';\nimport { EmpresasFormComponent } from './empresas-form/empresas-form.component';\nimport { EmpresaResolverGuard } from './guards/empresa-resolver.guard';\n\n\nconst routes: Routes = [\n  { path: '', component: EmpresasListaComponent},\n  { path: 'novo', component: EmpresasFormComponent, resolve: { empresa: EmpresaResolverGuard}},\n  { path: 'editar/:codigo', component: EmpresasFormComponent, resolve: { empresa: EmpresaResolverGuard} },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmpresasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { EmpresasRoutingModule } from './empresas-routing.module';\nimport { EmpresasListaComponent } from './empresas-lista/empresas-lista.component';\nimport { EmpresasFormComponent } from './empresas-form/empresas-form.component';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n@NgModule({\n  declarations: [EmpresasListaComponent, EmpresasFormComponent],\n  imports: [\n    CommonModule,\n    EmpresasRoutingModule,\n    ReactiveFormsModule,\n    CollapseModule,\n    TooltipModule\n  ]\n})\nexport class EmpresasModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Empresa } from './empresa';\nimport { CrudService } from '../shared/crud-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresasService extends CrudService<Empresa> {\n\n  constructor(protected http: HttpClient) {\n    super(http, '/api/Empresa');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Empresa } from '../empresa';\nimport { EmpresasService } from '../empresas.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaResolverGuard implements Resolve<Empresa> {\n\n  constructor(private service: EmpresasService) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Empresa> {\n    if (route.params && route.params.codigo) {\n        return this.service.loadByCodigo(route.params.codigo);\n    }\n    return of({\n      codigo: null,\n      nomeReal: null,\n      nomeFantasia: null,\n      filiais: null\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"empresas-empresas-module-es5.js"}