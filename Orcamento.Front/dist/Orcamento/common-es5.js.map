{"version":3,"sources":["src/app/shared/alert-modal.service.ts","src/app/shared/crud-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AlertModalComponent } from './alert-modal/alert-modal.component';\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { ConfigListModalComponent } from './config-list-modal/config-list-modal.component';\nimport { ConfigList } from './config-list-modal/configList';\n\nexport enum AlertTypes {\n  DANGER = 'danger',\n  SUCCESS = 'success'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertModalService {\n\n  constructor(private modalService: BsModalService) { }\n\n  private showAlert(message: string, type: AlertTypes, dismissTimeount?: number) {\n    const bsModalRef: BsModalRef = this.modalService.show(AlertModalComponent);\n    bsModalRef.content.type = type;\n    bsModalRef.content.message = message;\n\n    if (dismissTimeount) {\n      setTimeout(() => bsModalRef.hide(), dismissTimeount);\n    }\n  }\n\n  showAlertDanger(message: string) {\n    this.showAlert(message, AlertTypes.DANGER);\n  }\n\n  showAlertSuccess(message: string) {\n    this.showAlert(message, AlertTypes.SUCCESS, 2000);\n  }\n\n  showConfirm(title: string, msg: string, okText?: string, cancelTxt?: string) {\n    const bsModelRef: BsModalRef = this.modalService.show(ConfirmModalComponent);\n    bsModelRef.content.title = title;\n    bsModelRef.content.msg = msg;\n    if (okText) { bsModelRef.content.okText = okText; }\n    if (cancelTxt) { bsModelRef.content.cancelText = cancelTxt; }\n\n    return (bsModelRef.content as ConfirmModalComponent).confirmResult;\n  }\n\n  showConfigList(configList: ConfigList) {\n    const bsModelRef: BsModalRef = this.modalService.show(ConfigListModalComponent);\n    bsModelRef.content.pagination = configList.pagination;\n    bsModelRef.content.pageSize = configList.pageSize;\n    return (bsModelRef.content as ConfigListModalComponent).confirmResult;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { Lista } from '../shared/lista/lista';\n\nexport class CrudService<T> {\n\n  constructor(protected http: HttpClient, private API_URL: string) { }\n\n  list() {\n    return this.http.get<Lista>(`${this.API_URL}/lista`).pipe(take(1));\n  }\n\n  listFilter(record: Lista) {\n    return this.http.post<Lista>(`${this.API_URL}/lista`, record).pipe(take(1));\n  }\n\n  loadByCodigo(codigo: string) {\n    return this.http.get<T>(`${this.API_URL}/${codigo}`).pipe(take(1));\n  }\n\n  private create(record: T) {\n    return this.http.post(this.API_URL, record).pipe(take(1));\n  }\n\n  private update(record: T) {\n    return this.http.put(this.API_URL, record).pipe(take(1));\n  }\n\n  save(record: T, edit: boolean ) {\n    return (edit) ? this.update(record) : this.create(record);\n  }\n\n  remove(codigo: string) {\n    return this.http.delete(`${this.API_URL}/${codigo}`).pipe(take(1));\n  }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}