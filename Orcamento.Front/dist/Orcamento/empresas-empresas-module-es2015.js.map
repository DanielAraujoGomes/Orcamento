{"version":3,"sources":["./src/app/empresas/empresas-form/empresas-form.component.html","./src/app/empresas/empresas-lista/empresas-lista.component.html","./src/app/empresas/empresas-form/empresas-form.component.scss","./src/app/empresas/empresas-form/empresas-form.component.ts","./src/app/empresas/empresas-lista/empresas-lista.component.scss","./src/app/empresas/empresas-lista/empresas-lista.component.ts","./src/app/empresas/empresas-routing.module.ts","./src/app/empresas/empresas.module.ts","./src/app/empresas/empresas.service.ts","./src/app/empresas/guards/empresa-resolver.guard.ts"],"names":[],"mappings":"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","file":"empresas-empresas-module-es2015.js","sourcesContent":["export default \"<form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"form\\\">\\n  <div class=\\\"card border-primary mb-3\\\">\\n    <div class=\\\"card-header\\\">\\n      <h4>Empresa: <small class=\\\"text-secondary\\\">{{ form.controls['nomeReal'].value }}</small></h4>\\n    </div>\\n    <div class=\\\"card-body text-primary\\\">\\n      <div class=\\\"form-row mb-3\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"codigo\\\">Código</label>\\n          <input [readonly]=\\\"edit\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"codigo\\\" placeholder=\\\"Código\\\" formControlName=\\\"codigo\\\"  [ngClass]=\\\"{'is-invalid': submitted && hasError('codigo')}\\\" />          \\n          <div class=\\\"valid-feedback\\\"></div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"hasError('codigo') && hasError('codigo')['required']\\\">\\n            Por favor informe um código para a empresa.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row mb-3\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"nomeReal\\\">Nome Real</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeReal\\\" placeholder=\\\"Nome Real\\\" formControlName=\\\"nomeReal\\\" [ngClass]=\\\"{ 'is-invalid': submitted && hasError('nomeReal')}\\\" />\\n          <div class=\\\"valid-feedback\\\"></div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"hasError('nomeReal') && hasError('nomeReal')['required']\\\">\\n            Por favor informe um nome real para a empresa.\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row mb-3\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"nomeFantasia\\\">Nome Fantasia</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" placeholder=\\\"Nome Fantasia\\\" formControlName=\\\"nomeFantasia\\\" [ngClass]=\\\"{ 'is-invalid': submitted && hasError('nomeFantasia')}\\\"/>\\n          <div class=\\\"valid-feedback\\\"></div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"hasError('nomeFantasia') && hasError('nomeFantasia')['required']\\\">\\n            Por favor informe um nome fantasia para a empresa.\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-row btn-row form-row-btn\\\">\\n    <button class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onBack()\\\">Voltar</button>\\n    <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"onSubmit()\\\">Salvar</button>\\n  </div>\\n\\n</form>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <div class=\\\"float-left text-primary\\\">\\n      <span class=\\\"icon icon-office title\\\"></span>\\n      <h4 class=\\\"title\\\">Empresas</h4>\\n    </div>\\n    <div class=\\\"float-right\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" [routerLink]=\\\"['novo']\\\" tooltip=\\\"New record.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-plus \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onRefresh()\\\" tooltip=\\\"Refresh List.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-loop2 \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onConfigList()\\\" tooltip=\\\"Config List.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-cog \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onRefresh()\\\" tooltip=\\\"Carga.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-upload \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"onRefresh()\\\" tooltip=\\\"Dowload file.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-download \\\"></span>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary \\\" [ngClass]=\\\"{'active': !isCollapsed}\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\n            [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseBasic\\\" tooltip=\\\"Filter.\\\" placement=\\\"top\\\">\\n            <span class=\\\"icon icon-filter \\\"></span>\\n          </button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n    <div id=\\\"collapseBasic\\\" [collapse]=\\\"isCollapsed\\\" [isAnimated]=\\\"true\\\" class=\\\"bg-light mb-3 rounded shadow-sm\\\">\\n      <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"form\\\">\\n        <div class=\\\"form-row pr-3 pl-3\\\">\\n          <div class=\\\"col-sm-4 mb-3\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"codigo\\\">#</label>\\n            <input class=\\\"form-control\\\" id=\\\"codigo\\\" placeholder=\\\"Código\\\" formControlName=\\\"codigo\\\" />\\n          </div>\\n          <div class=\\\"col-sm-8 mb-3\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"nomeFantasia\\\">Empresa</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomeFantasia\\\" placeholder=\\\"Empresa\\\" formControlName=\\\"nomeFantasia\\\" />\\n          </div>\\n        </div>\\n        <div class=\\\"form-row pr-3 pl-3\\\">\\n          <div class=\\\"col-sm-12 mb-3 text-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"onFilterConfirm()\\\">Aplicar Filtro</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <table class=\\\"table table-striped mobile-optimised\\\" *ngIf=\\\"list; else loading\\\">\\n      <thead>\\n        <tr>\\n          <th>#</th>\\n          <th>Empresa</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let fields of list.data\\\">\\n          <td data-th=\\\"#\\\">{{ fields.codigo }}</td>\\n          <td data-th=\\\"Empresa\\\">{{ fields.nomeFantasia }}</td>\\n          <td>\\n            <span class=\\\"float-right\\\">\\n              <button class=\\\"btn btn-outline-info mb-1 btn-sm mr-2\\\" (click)=\\\"onEdit(fields.codigo)\\\" tooltip=\\\"Edit.\\\" placement=\\\"top\\\">\\n                <span class=\\\"icon icon-pencil \\\"></span>\\n              </button>\\n              <button class=\\\"btn btn-outline-danger mb-1 btn-sm\\\" (click)=\\\"onDelete(fields.codigo)\\\" tooltip=\\\"Delete.\\\" placement=\\\"top\\\">\\n                <span class=\\\"icon icon-bin \\\"></span>\\n              </button>\\n            </span>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <ng-template #loading>\\n      <span>Carregando Empresas...</span>\\n    </ng-template>\\n  </div>\\n  <div class=\\\"card-footer text-muted\\\" *ngIf=\\\"list\\\">\\n    <div class=\\\"float-left\\\">\\n      <nav aria-label=\\\"Page navigation example\\\" *ngIf=\\\"list\\\">\\n        <ul class=\\\"pagination mb-0\\\">\\n          <li class=\\\"page-item\\\" *ngIf=\\\"list.pages.length >= 1\\\">\\n            <span class=\\\"page-link link-pointer\\\" (click)=\\\"onPagination(1)\\\">\\n              <<span class=\\\"sr-only\\\">(current)</span>\\n            </span>\\n          </li>\\n          <li class=\\\"page-item\\\" *ngFor=\\\"let page of list.pages\\\" [ngClass]=\\\"{'active': page == list.pageNow}\\\" aria-current=\\\"page\\\">\\n            <span class=\\\"page-link\\\" [ngClass]=\\\"{'link-pointer': page != list.pageNow}\\\" (click)=\\\"onPagination(page)\\\">\\n              {{ page }}\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </span>\\n          </li>\\n          <li class=\\\"page-item\\\"  *ngIf=\\\"list.pages.length >= 1\\\">\\n            <span class=\\\"page-link link-pointer\\\" (click)=\\\"onPagination(list.pageCount)\\\">\\n              ><span class=\\\"sr-only\\\">(current)</span>\\n            </span>\\n          </li>\\n        </ul>\\n      </nav>\\n    </div>\\n    <div class=\\\"float-right text-primary pagination-ds\\\">\\n      {{list.pageNow}} de {{list.pageCount}} paginas ( {{list.regCount}} itens )\\n    </div>\\n  </div>\\n</div>\\n\\n\"","export default \".btn-row {\\n  margin-top: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pZWxhcmF1am9nb21lcy9Qcm9qZWN0cy9PcmNhbWVudG8uRnJvbnQvT3JjYW1lbnRvL3NyYy9hcHAvZW1wcmVzYXMvZW1wcmVzYXMtZm9ybS9lbXByZXNhcy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9lbXByZXNhcy9lbXByZXNhcy1mb3JtL2VtcHJlc2FzLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZW1wcmVzYXMvZW1wcmVzYXMtZm9ybS9lbXByZXNhcy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1yb3cge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuIiwiLmJ0bi1yb3cge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { EmpresasService } from '../empresas.service';\nimport { AlertModalService } from '../../shared/alert-modal.service';\nimport { ActivatedRoute } from '@angular/router';\n\nexport enum AlertEmpresa {\n  UPDATE_SUCCESS = 'Empresa atualizada com sucesso!',\n  UPDATE_ERROR = 'Erro ao atualizar empresa, tente novamente!',\n  CREATE_SUCCESS = 'Empresa criada com sucesso!',\n  CREATE_ERROR = 'Erro ao criar empresa, tente novamente!'\n}\n\n@Component({\n  selector: 'app-empresas-form',\n  templateUrl: './empresas-form.component.html',\n  styleUrls: ['./empresas-form.component.scss']\n})\nexport class EmpresasFormComponent implements OnInit {\n\n  form: FormGroup;\n  submitted: boolean;\n  edit: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: EmpresasService,\n    private modal: AlertModalService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n\n      const empresa = this.route.snapshot.data.empresa;\n\n      this.edit = (empresa.codigo == null) ? false : true;\n\n      this.form = this.fb.group({\n        codigo: [empresa.codigo, Validators.required],\n        nomeReal: [empresa.nomeReal, Validators.required],\n        nomeFantasia: [empresa.nomeFantasia, Validators.required],\n      });\n\n      this.submitted = false;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.valid) {\n      this.service.save(this.form.value , this.edit).subscribe(\n        success => { this.edit ? this.onUpdate() : this.onCreate(); },\n        error => this.modal.showAlertDanger( this.edit ? AlertEmpresa.UPDATE_ERROR : AlertEmpresa.CREATE_ERROR )\n      );\n    }\n  }\n\n  private onUpdate() {\n    this.modal.showAlertSuccess(AlertEmpresa.UPDATE_SUCCESS);\n    this.onBack();\n  }\n\n  private onCreate() {\n    this.modal.showAlertSuccess(AlertEmpresa.CREATE_SUCCESS);\n    this.submitted = false;\n    this.form.reset();\n  }\n\n  hasError(field: string) {\n    return this.form.get(field).errors;\n  }\n\n  onCancel() {\n    this.submitted = false;\n    this.form.reset();\n    console.log('onCancel');\n  }\n\n  onBack() {\n    this.location.back();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcHJlc2FzL2VtcHJlc2FzLWxpc3RhL2VtcHJlc2FzLWxpc3RhLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError, take, switchMap } from 'rxjs/operators';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { Filter } from './../../shared/lista/filter';\nimport { EmpresasService } from '../empresas.service';\nimport { AlertModalService } from '../../shared/alert-modal.service';\nimport { Lista } from 'src/app/shared/lista/lista';\nimport { ConfigList } from '../../shared/config-list-modal/configList';\n\nexport enum Alert {\n  LISTA_ERROR = 'Erro ao carregar empresas. Tente novamente mais tarde.',\n  CONFIRMACAO_EXCLUSAO = 'Tem certeza que deseja remover essa empresa?',\n  DELETE_SUCCESS = 'Empresa removida com sucesso!',\n  DELETE_ERROR = 'Erro ao remover empresa. Tente novamente mais tarde!',\n  SESSION_STORAGE = 'empresaLista',\n  CONFIG_LIST_ERROR = 'Erro ao configurar a lista. Tente novamente mais tarde!',\n  CONFIG_LIST_SUCCESS = 'Configuração aplicada com sucesso.'\n}\n\n@Component({\n  selector: 'app-empresas-lista',\n  templateUrl: './empresas-lista.component.html',\n  styleUrls: ['./empresas-lista.component.scss']\n})\nexport class EmpresasListaComponent implements OnInit {\n\n  form: FormGroup;\n  error$ = new Subject<boolean>();\n  deleteModalRef: BsModalRef;\n  filterModalRef: BsModalRef;\n  list: Lista = {\n    pagination: true,\n    pagePrevious: 0,\n    pageNext: 0,\n    pageCount: 0,\n    pageNow: 0,\n    pageSize: 0,\n    regCount: 0,\n    pages: [],\n    select: [],\n    orderBy: [],\n    filters: [],\n    data: null\n  };\n  isCollapsed = true;\n\n  @ViewChild('deleteModal', {static : false}) deleteModal: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: EmpresasService,\n    private alertService: AlertModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit() {\n    const session = JSON.parse(sessionStorage.getItem(Alert.SESSION_STORAGE));\n    if (session != null) { this.list = session; }\n    this.setInputSearch(this.list.filters);\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  private setInputSearch(filter: Filter[]) {\n\n    let codigo: string = null;\n    let nomeFantasia: string = null;\n\n    filter.forEach(x => {\n      if (x.name == 'codigo') { codigo = x.value; }\n      if (x.name == 'nomeFantasia') { nomeFantasia = x.value; }\n    });\n\n    if (filter.length >= 1) { this.isCollapsed = false; }\n\n    this.form = this.fb.group({\n      codigo: [codigo],\n      nomeFantasia: [nomeFantasia]\n    });\n  }\n\n  onRefresh() {\n    this.list.filters = [];\n    this.list.pageNow = 1;\n    this.isCollapsed = true;\n    this.form.reset();\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  onFilter(template: TemplateRef<any>) {\n    this.filterModalRef = this.modalService.show(template);\n  }\n\n  onPagination(page: number) {\n    this.list.pageNow = page;\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  onFilterConfirm() {\n    const filters: Filter[] = [];\n    this.list.filters = [];\n    this.list.pageNow = 1;\n    Object.keys(this.form.controls).forEach(key => {\n      if (this.form.get(key).value != null && this.form.get(key).value != '') {\n        this.list.filters.push({\n          name: key,\n          value: this.form.get(key).value\n        });\n      }\n    });\n    this.lista();\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n  }\n\n  handleError() {\n    this.alertService.showAlertDanger(Alert.LISTA_ERROR);\n  }\n\n  onEdit(codigo: string) {\n    this.router.navigate(['editar', codigo], {relativeTo: this.route});\n  }\n\n  onDelete(codigo: string) {\n    const result$ = this.alertService.showConfirm('Confirmação', Alert.CONFIRMACAO_EXCLUSAO);\n    result$.asObservable().pipe(\n      take(1),\n      switchMap(result => result ? this.service.remove(codigo) : EMPTY)\n    )\n    .subscribe(\n      success => this.onConfirmeDeleteSuccess(),\n      error => this.onConfirmeDeleteError()\n    );\n  }\n\n  onConfigList() {\n    const session = JSON.parse(sessionStorage.getItem(Alert.SESSION_STORAGE));\n    const list: Lista = session as Lista;\n    // this.list = session;\n\n    const configList: ConfigList = {\n      success: true,\n      pagination: list.pagination,\n      pageSize: list.pageSize\n    };\n\n    const result$ = this.alertService.showConfigList(configList);\n    result$.asObservable().pipe(take(1))\n    .subscribe(\n      success => this.onConfirmeConfigListSuccess(success),\n      error => this.onConfirmeConfigListError()\n    );\n  }\n\n  private onConfirmeConfigListSuccess(configList: ConfigList) {\n    if (!configList.success) { return; }\n    console.log(configList);\n\n    this.list.pageSize = configList.pageSize != null ? configList.pageSize : 0;\n    this.list.pagination = configList.pagination != null ? configList.pagination : true;\n    sessionStorage.setItem(Alert.SESSION_STORAGE, JSON.stringify(this.list));\n    this.lista();\n    this.alertService.showAlertSuccess(Alert.CONFIG_LIST_SUCCESS);\n  }\n\n  private onConfirmeConfigListError() {\n    this.alertService.showAlertDanger(Alert.CONFIG_LIST_ERROR);\n  }\n\n  private lista() {\n    this.service.listFilter(this.list).pipe(\n      take(1),\n      catchError(error => {\n        this.handleError();\n        return EMPTY;\n      })\n    ).subscribe(dados => this.list = dados);\n  }\n\n  private onConfirmeDeleteSuccess() {\n    this.onRefresh();\n    this.alertService.showAlertSuccess(Alert.DELETE_SUCCESS);\n  }\n\n  private onConfirmeDeleteError() {\n    this.alertService.showAlertDanger(Alert.DELETE_ERROR);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpresasListaComponent } from './empresas-lista/empresas-lista.component';\nimport { EmpresasFormComponent } from './empresas-form/empresas-form.component';\nimport { EmpresaResolverGuard } from './guards/empresa-resolver.guard';\n\n\nconst routes: Routes = [\n  { path: '', component: EmpresasListaComponent},\n  { path: 'novo', component: EmpresasFormComponent, resolve: { empresa: EmpresaResolverGuard}},\n  { path: 'editar/:codigo', component: EmpresasFormComponent, resolve: { empresa: EmpresaResolverGuard} },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmpresasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { EmpresasRoutingModule } from './empresas-routing.module';\nimport { EmpresasListaComponent } from './empresas-lista/empresas-lista.component';\nimport { EmpresasFormComponent } from './empresas-form/empresas-form.component';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n@NgModule({\n  declarations: [EmpresasListaComponent, EmpresasFormComponent],\n  imports: [\n    CommonModule,\n    EmpresasRoutingModule,\n    ReactiveFormsModule,\n    CollapseModule,\n    TooltipModule\n  ]\n})\nexport class EmpresasModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Empresa } from './empresa';\nimport { CrudService } from '../shared/crud-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresasService extends CrudService<Empresa> {\n\n  constructor(protected http: HttpClient) {\n    super(http, '/api/Empresa');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Empresa } from '../empresa';\nimport { EmpresasService } from '../empresas.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaResolverGuard implements Resolve<Empresa> {\n\n  constructor(private service: EmpresasService) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Empresa> {\n    if (route.params && route.params.codigo) {\n        return this.service.loadByCodigo(route.params.codigo);\n    }\n    return of({\n      codigo: null,\n      nomeReal: null,\n      nomeFantasia: null,\n      filiais: null\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}